worker_processes 2;
pid /usr/local/var/run/security_${ENV}_nginx.pid;

error_log /usr/local/var/log/nginx/security_${ENV}_error.log error;

events {
    worker_connections 2048;
}


http {
    include mime.types;
    default_type application/octet-stream;

    log_subrequest on;

    $(echo "#log_format main '\$remote_addr - \$remote_user [\$time_local] \$host \"\$request\" \$status \$bytes_sent '")
    $(echo "#                '\"\$http_referer\" \"\$http_user_agent\"'")
    $(echo "#                'ProxyRequest[\$proxy_host\$uri\$is_args\$args] '")
    $(echo "#                'Upstream[\$upstream_cache_status \$upstream_status \$upstream_response_time \$upstream_http_expires] '")
    $(echo "#                'CORS: \"Origin: \$http_origin\" \"Request-Method: \$http_access_control_request_method\" \"Response-Allow-Origin: \$sent_http_access_control_allow_origin\" \"Allow-Request-Headers: \$http_access_control_request_headers\" '")
    $(echo "#                'Request[\$request_length \$request_time \$body_bytes_sent] ';")
    
    log_format main
      '\${time_local}\0134t\${remote_addr}\0134t\${host}\0134t\${request_method}\0134t\${request_uri}\0134t\${server_protocol}\0134t'
      '\${http_referer}\0134t'
      'Local:\0134t\${status}\0134t*\${connection}\0134t\${body_bytes_sent}\0134t\${request_time}\0134t'
      'Proxy:\0134t\${upstream_status}\0134t\${upstream_cache_status}\0134t'
      '\${upstream_response_length}\0134t\${upstream_response_time}\0134t\${uri}\0134t'
      'Agent:\0134t\${http_user_agent}\0134t'
      'Fwd:\0134t\${http_x_forwarded_for}';

    access_log /usr/local/var/log/nginx/security_${ENV}_access.log main;

    ssi on;
    sendfile on;
    keepalive_timeout 15;
    server_tokens off;
    port_in_redirect off;
    merge_slashes off;

    tcp_nopush on;
    tcp_nodelay on;

    client_header_buffer_size 6k;
    large_client_header_buffers 6 6k;
    client_max_body_size 20m;
    client_body_temp_path       /usr/local/var/run/nginx/security_${ENV}_client_body_temp 2 2;

    # Remove this to not interfere with the API
    #error_page                  400 403 404 /errordoc/40x.html;
    #error_page                  500 502 504 /errordoc/50x.html;
    error_page                  502 503 504 /errordoc/50x.html;

    proxy_temp_path             /usr/local/var/run/nginx/security_${ENV}_proxy_temp 2 2;
    proxy_redirect              off;
    proxy_set_header            Host \$host;
    proxy_set_header            X-Real-IP \$remote_addr;
    proxy_set_header            X-Forwarded-For \$proxy_add_x_forwarded_for;
    proxy_ignore_headers        \"Set-Cookie\";
    proxy_connect_timeout       2s;
    proxy_read_timeout          20s;
    proxy_send_timeout          10s;
    proxy_intercept_errors      on;
    proxy_ignore_client_abort   on;
    proxy_http_version          1.1;
    proxy_set_header Connection \"\";
    proxy_cache_path            /usr/local/var/run/nginx/security_${ENV}_proxy_cache  levels=2:2  keys_zone=ngnix_cache:1m  max_size=100m inactive=7d;
    proxy_cache_key             "\$uri\$is_args\$args";
    proxy_cache_use_stale       error timeout updating invalid_header http_500 http_502 http_503 http_504;

    gzip              on;
    gzip_buffers      128 4k;
    gzip_comp_level   5;
    gzip_http_version 1.0;
    gzip_min_length   256;
    gzip_proxied      any;
    gzip_vary         on;
    # Additional types, "text/html" is always compressed:
    gzip_types      application/atom+xml application/javascript
                    application/json application/rss+xml
                    application/xml application/x-javascript
                    text/css text/javascript text/plain text/xml;

    upstream _fivecolors {
        server ${be_bind_address};
        keepalive       20;
    }

    # HTTP
    server {
        listen ${http_bind_address};
        server_name ${server_name};

        $(echo 'if ($request_method !~ "(GET|HEAD|POST|PUT|DELETE|OPTIONS)") {')
            return 405;
        }

        # Error document
        location ^~ /errordoc/ {
            alias ${errordoc_alias};
        }

        location /html/ {
            auth_request /security/identity;
            root ${html_root};
        }

        # Security Proxypass
        location /security/identity {
            allow               127.0.0.0/24;
            deny                all;
            proxy_cache ngnix_cache;
            proxy_cache_key \$cookie_${cookie_name};
            proxy_cache_valid 200 60s;
            proxy_set_header Accept \"text/plain\";
            proxy_pass http://_fivecolors/identity;
            add_header X-Cache-Status \$upstream_cache_status;
        }

        # Healthcheck
        #location ~ /(healthcheck)(/?|\.html)$ {
        #    proxy_cache ngnix_cache;
        #    expires 30s;
        #    proxy_pass  http://_fivecolors/\$1;
        #}

        # Proxypass
        location /fivecolors/ {
            #proxy_cache ngnix_cache;
            #expires 30s;
            proxy_pass http://_fivecolors/;
        }
    }

    # HTTPS
    server {
        listen ${https_bind_address} ssl;
        server_name ${server_name};

        ssl_certificate     ${ssl_certificate};
        ssl_certificate_key ${ssl_certificate_key};
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        #ssl_ciphers HIGH:!ADH:!MD5:!kEDH;
        ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';
        ssl_prefer_server_ciphers on;

        # Error document
        location ^~ /errordoc/ {
            alias ${errordoc_alias};
        }

        $(echo 'if ($request_method !~ "(GET|HEAD|POST|PUT|DELETE|OPTIONS)") {')
            return 405;
        }

        # HTML
        location /html/ {
            auth_request /security/identity;
            root ${html_root};
        }

        # Security Proxypass
        location /security/identity {
            allow               127.0.0.0/24;
            deny                all;
            proxy_cache ngnix_cache;
            proxy_cache_key \$cookie_${cookie_name};
            proxy_cache_valid 200 60s;
            proxy_set_header Accept \"text/plain\";
            proxy_set_header X-Original-URI \$request_uri;
            proxy_pass_request_body off;
            proxy_pass http://_fivecolors/identity;
            add_header X-Cache-Status \$upstream_cache_status;
        }

        # Healthcheck
        #location ~ /(healthcheck)(/?|\.html)$ {
        #    proxy_cache ngnix_cache;
        #    expires 30s;
        #    proxy_pass  http://_fivecolors/\$1;
        #}

        # Proxypass
        location /fivecolors/ {
            proxy_cache ngnix_cache;
            #expires 30s;
            proxy_pass http://_fivecolors/;
        }
    }
}
# EOF
